{"ast":null,"code":"var _jsxFileName = \"/Users/christosstylidis/Chris/Dev/Code/Education/IHU/Master/Dissertation/Real Time Ticketing System/app/front-end/src/components/UserDashboard/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CreateTicket from \"../../Shared/CreateTicket\";\nimport endpoints from \"../../api/endpoints\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleLogout = () => {\n  localStorage.clear();\n  window.location.href = \"/\";\n};\nfunction UserDashboard() {\n  _s();\n  var _selectedTicket$creat;\n  const [tickets, setTickets] = useState([]);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Get username\n    const username = localStorage.getItem(\"username\");\n    setUsername(username);\n\n    // Initialize WebSocket connection\n    const socket = io(\"http://localhost:8000\");\n    setSocket(socket);\n    let isMounted = true; // Track if the component is mounted\n\n    // Log connection ID when WebSocket connects\n    socket.on(\"connect\", () => {\n      if (isMounted) {\n        console.log(\"WebSocket connected with ID:\", socket.id);\n\n        // Fetch tickets on component mount\n        fetchTickets();\n      }\n    });\n\n    // Handle WebSocket error\n    socket.on(\"error\", err => {\n      console.error(\"WebSocket error:\", err);\n    });\n\n    // Handle WebSocket disconnect\n    socket.on(\"disconnect\", reason => {\n      console.warn(\"WebSocket disconnected:\", reason);\n    });\n\n    // Listen for \"ticketCreated\" event\n    socket.on(\"ticketCreated\", newTicket => {\n      if (isMounted) {\n        console.log(\"New ticket received via WebSocket:\", newTicket);\n\n        // Update the tickets list dynamically\n        setTickets(prevTickets => {\n          const updatedTickets = [newTicket, ...prevTickets];\n          console.log(\"Updated Tickets State:\", updatedTickets); // Debug updated tickets\n          return updatedTickets;\n        });\n      }\n    });\n\n    // Listen for the \"statusUpdated\" event\n    socket.on(\"statusUpdated\", updatedTicket => {\n      if (!updatedTicket) {\n        console.error(\"No data received for statusUpdated event\");\n        return;\n      }\n      if (isMounted) {\n        // Update tickets list\n        setTickets(prevTickets => prevTickets.map(ticket => ticket._id === updatedTicket._id ? updatedTicket : ticket));\n\n        // Update the selected ticket if it matches the updated ticket\n        setSelectedTicket(prevSelected => prevSelected && prevSelected._id === updatedTicket._id ? updatedTicket : prevSelected);\n      }\n    });\n\n    // Cleanup function to disconnect the socket\n    return () => {\n      isMounted = false; // Prevent operations if the component is unmounted\n      socket.off(\"ticketCreated\");\n      socket.off(\"statusUpdated\");\n      socket.off(\"error\");\n      socket.off(\"disconnect\");\n      socket.disconnect();\n      console.log(\"WebSocket disconnected\");\n    };\n  }, []);\n  const fetchTickets = async () => {\n    try {\n      console.log(\"Fetching tickets...\"); // Log the start of fetching\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(endpoints.GET_TICKETS, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Fetched Tickets from API:\", response.data); // Log the fetched tickets from API\n\n      setTickets(prevTickets => {\n        console.log(\"Previous Tickets State:\", prevTickets); // Log current state\n        console.log(\"Updated Tickets State:\", response.data); // Log new state\n        return response.data; // Update the tickets state\n      });\n    } catch (error) {\n      console.error(\"Error fetching tickets:\", error.message); // Log errors\n    }\n  };\n  const fetchTicketDetails = async ticketId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(endpoints.GET_TICKET_BY_ID(ticketId), {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSelectedTicket(response.data);\n    } catch (error) {\n      console.error(\"Error fetching ticket details:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboardHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerLeft\",\n        children: [\"Welcome, \", username || \"[Username]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"headerCenter\",\n        children: \"User Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logoutButton\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createTicketSection\",\n      children: /*#__PURE__*/_jsxDEV(CreateTicket, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticketsList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"sectionHeader\",\n          children: \"My Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), tickets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ticketList\",\n          children: tickets.map((ticket, index) => {\n            console.log(\"Ticket ID:\", ticket._id); // Log the ticket ID to verify its uniqueness\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ticketItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), \" \", ticket.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), \" \", ticket.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => fetchTicketDetails(ticket._id),\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), index !== tickets.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"ticketItemDivider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this)]\n            }, ticket._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tickets found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticketDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"sectionHeader\",\n          children: \"Ticket Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), selectedTicket ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), \" \", selectedTicket.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), \" \", selectedTicket.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), \" \", selectedTicket.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), \" \", selectedTicket.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Created By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), \" \", ((_selectedTicket$creat = selectedTicket.createdBy) === null || _selectedTicket$creat === void 0 ? void 0 : _selectedTicket$creat.username) || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a ticket to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"Fi5It7CwoFaJYC70qqr28xLhoMU=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","CreateTicket","endpoints","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","handleLogout","localStorage","clear","window","location","href","UserDashboard","_s","_selectedTicket$creat","tickets","setTickets","selectedTicket","setSelectedTicket","username","setUsername","socket","setSocket","getItem","isMounted","on","console","log","id","fetchTickets","err","error","reason","warn","newTicket","prevTickets","updatedTickets","updatedTicket","map","ticket","_id","prevSelected","off","disconnect","token","response","get","GET_TICKETS","headers","Authorization","data","message","fetchTicketDetails","ticketId","GET_TICKET_BY_ID","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","title","status","description","category","createdBy","_c","$RefreshReg$"],"sources":["/Users/christosstylidis/Chris/Dev/Code/Education/IHU/Master/Dissertation/Real Time Ticketing System/app/front-end/src/components/UserDashboard/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CreateTicket from \"../../Shared/CreateTicket\";\nimport endpoints from \"../../api/endpoints\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\n\nconst handleLogout = () => {\n  localStorage.clear();\n  window.location.href = \"/\";\n};\n\nfunction UserDashboard() {\n  const [tickets, setTickets] = useState([]);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Get username\n    const username = localStorage.getItem(\"username\");\n    setUsername(username);\n\n    // Initialize WebSocket connection\n    const socket = io(\"http://localhost:8000\");\n    setSocket(socket);\n\n    let isMounted = true; // Track if the component is mounted\n\n    // Log connection ID when WebSocket connects\n    socket.on(\"connect\", () => {\n      if (isMounted) {\n        console.log(\"WebSocket connected with ID:\", socket.id);\n\n        // Fetch tickets on component mount\n        fetchTickets();\n      }\n    });\n\n    // Handle WebSocket error\n    socket.on(\"error\", (err) => {\n      console.error(\"WebSocket error:\", err);\n    });\n\n    // Handle WebSocket disconnect\n    socket.on(\"disconnect\", (reason) => {\n      console.warn(\"WebSocket disconnected:\", reason);\n    });\n\n    // Listen for \"ticketCreated\" event\n    socket.on(\"ticketCreated\", (newTicket) => {\n      if (isMounted) {\n        console.log(\"New ticket received via WebSocket:\", newTicket);\n\n        // Update the tickets list dynamically\n        setTickets((prevTickets) => {\n          const updatedTickets = [newTicket, ...prevTickets];\n          console.log(\"Updated Tickets State:\", updatedTickets); // Debug updated tickets\n          return updatedTickets;\n        });\n      }\n    });\n\n    // Listen for the \"statusUpdated\" event\n    socket.on(\"statusUpdated\", (updatedTicket) => {\n      if (!updatedTicket) {\n        console.error(\"No data received for statusUpdated event\");\n        return;\n      }\n      if (isMounted) {\n        // Update tickets list\n        setTickets((prevTickets) =>\n          prevTickets.map((ticket) =>\n            ticket._id === updatedTicket._id ? updatedTicket : ticket\n          )\n        );\n\n        // Update the selected ticket if it matches the updated ticket\n        setSelectedTicket((prevSelected) =>\n          prevSelected && prevSelected._id === updatedTicket._id\n            ? updatedTicket\n            : prevSelected\n        );\n      }\n    });\n\n    // Cleanup function to disconnect the socket\n    return () => {\n      isMounted = false; // Prevent operations if the component is unmounted\n      socket.off(\"ticketCreated\");\n      socket.off(\"statusUpdated\");\n      socket.off(\"error\");\n      socket.off(\"disconnect\");\n      socket.disconnect();\n      console.log(\"WebSocket disconnected\");\n    };\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      console.log(\"Fetching tickets...\"); // Log the start of fetching\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(endpoints.GET_TICKETS, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      console.log(\"Fetched Tickets from API:\", response.data); // Log the fetched tickets from API\n\n      setTickets((prevTickets) => {\n        console.log(\"Previous Tickets State:\", prevTickets); // Log current state\n        console.log(\"Updated Tickets State:\", response.data); // Log new state\n        return response.data; // Update the tickets state\n      });\n    } catch (error) {\n      console.error(\"Error fetching tickets:\", error.message); // Log errors\n    }\n  };\n\n  const fetchTicketDetails = async (ticketId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(endpoints.GET_TICKET_BY_ID(ticketId), {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setSelectedTicket(response.data);\n    } catch (error) {\n      console.error(\"Error fetching ticket details:\", error.message);\n    }\n  };\n\n  return (\n    <div>\n      <header className=\"dashboardHeader\">\n        <div className=\"headerLeft\">Welcome, {username || \"[Username]\"}</div>\n        <h3 className=\"headerCenter\">User Dashboard</h3>\n        <button className=\"logoutButton\" onClick={handleLogout}>\n          Logout\n        </button>\n      </header>\n      <hr className=\"divider\" />\n\n      {/* Create Ticket Section */}\n      <div className=\"createTicketSection\">\n        <CreateTicket socket={socket} />\n      </div>\n      <hr className=\"divider\" />\n\n      {/* Tickets and Details */}\n      <div className=\"dashboardContainer\">\n        {/* My Tickets Section */}\n        <div className=\"ticketsList\">\n          <h3 className=\"sectionHeader\">My Tickets</h3>\n          {tickets.length > 0 ? (\n            <ul className=\"ticketList\">\n              {tickets.map((ticket, index) => {\n                console.log(\"Ticket ID:\", ticket._id); // Log the ticket ID to verify its uniqueness\n                return (\n                  <li className=\"ticketItem\" key={ticket._id}>\n                    <strong>Title:</strong> {ticket.title} <br />\n                    <strong>Status:</strong> {ticket.status} <br />\n                    <button onClick={() => fetchTicketDetails(ticket._id)}>\n                      View Details\n                    </button>\n                    {index !== tickets.length - 1 && (\n                      <hr className=\"ticketItemDivider\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p>No tickets found.</p>\n          )}\n        </div>\n\n        {/* Ticket Details Section */}\n        <div className=\"ticketDetails\">\n          <h3 className=\"sectionHeader\">Ticket Details</h3>\n          {selectedTicket ? (\n            <>\n              <p>\n                <strong>Title:</strong> {selectedTicket.title}\n              </p>\n              <p>\n                <strong>Description:</strong> {selectedTicket.description}\n              </p>\n              <p>\n                <strong>Category:</strong> {selectedTicket.category}\n              </p>\n              <p>\n                <strong>Status:</strong> {selectedTicket.status}\n              </p>\n              <p>\n                <strong>Created By:</strong>{\" \"}\n                {selectedTicket.createdBy?.username || \"N/A\"}\n              </p>\n            </>\n          ) : (\n            <p>Select a ticket to view details</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}